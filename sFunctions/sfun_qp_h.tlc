%% file : sfun_qp_h.tlc
%% 
%% Description:
%%   Simulink Coder TLC Code Generation file for sfun_qp_h
%% 
%% Simulink version      : 9.2 (R2018b) 24-May-2018
%% TLC file generated on : 25-May-2020 21:16:01

/%
     %%%-MATLAB_Construction_Commands_Start
     def = legacy_code('initialize');
     def.SFunctionName = 'sfun_qp_h';
     def.OutputFcnSpec = 'void Wrap_qp_h(double u1[], double u2[], double y1[100])';
     def.HeaderFiles = {'qp_h.h', 'Wrap_qp_h.h'};
     def.SourceFiles = {'qp_h.c', 'Wrap_qp_h.c'};
     def.IncPaths = {'../cSourceFiles/'};
     def.SrcPaths = {'../cSourceFiles/'};
     legacy_code('sfcn_tlc_generate', def);
     %%%-MATLAB_Construction_Commands_End
%/

%implements sfun_qp_h "C"

%% Function: BlockTypeSetup ===============================================
%function BlockTypeSetup (block, system) void

    %% The Target Language must be C
    %if ::GenCPP==1 && !IsModelReferenceSimTarget()
        %<LibReportFatalError("This S-Function generated by the Legacy Code Tool must be only used with the C Target Language")>
    %endif

    %<LibAddToCommonIncludes("qp_h.h")>
    %<LibAddToCommonIncludes("Wrap_qp_h.h")>
    %<SLibAddToStaticSources("qp_h.c")>
    %<SLibAddToStaticSources("Wrap_qp_h.c")>
%endfunction

%% Function: BlockInstanceSetup ===========================================
%function BlockInstanceSetup (block, system) void
    %<LibBlockSetIsExpressionCompliant(block)>
%endfunction

%% Function: Outputs ======================================================
%function Outputs (block, system) Output
    %assign u1_ptr = LibBlockInputSignalAddr(0, "", "", 0)
    %assign u2_ptr = LibBlockInputSignalAddr(1, "", "", 0)
    %assign y1_ptr = LibBlockOutputSignalAddr(0, "", "", 0)
    %% 
    Wrap_qp_h((real_T*)%<u1_ptr>, (real_T*)%<u2_ptr>, %<y1_ptr>);
%endfunction

%% [EOF]
